{"version":3,"sources":["components/Header.js","components/Like.js","components/Images.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Like","state","liked","toggle","localLiked","setState","className","style","border","width","onClick","this","icon","faHeart","faHeartBroken","Component","Images","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","console","log","message","Container","map","item","src","url","height","alt","ListGroup","Item","title","date","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAeeA,EAZA,WACb,OACE,iCACE,mCACA,uBACE,0DACA,6BAAI,qG,uBC4BGC,E,4MA9BfC,MAAQ,CAAEC,OAAO,G,EACjBC,OAAS,WACR,IAAIC,EAAa,EAAKH,MAAMC,MAG5BE,GAAcA,EACd,EAAKC,SAAS,CAAEH,MAAOE,K,4CAExB,WAAU,IAAD,OACR,OACA,qBAAKE,UAAU,YAAf,SACC,mCACA,qCACA,qBACCA,UAAU,YACVC,MAAO,CAAEC,OAAQ,kBAAmBC,MAAO,OAC3CC,QAAS,kBAAM,EAAKP,UAHrB,UAKuB,IAArBQ,KAAKV,MAAMC,MACZ,cAAC,IAAD,CAAiBU,KAAMC,MAEvB,cAAC,IAAD,CAAiBD,KAAME,iB,GAtBPC,a,gBCmDJC,MApDf,WAAmB,IAAD,EACUC,mBAAS,MADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,oBAAS,GAFzB,mBAETG,EAFS,KAECC,EAFD,OAGUJ,mBAAS,IAHnB,mBAGTK,EAHS,KAGFC,EAHE,KAwBhB,OAjBAC,qBAAU,WACRC,MAHU,iGAIPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,GACTC,QAAQC,IAAIF,MAGf,SAACX,GACEG,GAAY,GACZF,EAASD,QAGd,IAECA,EACK,0CAAaA,EAAMc,WAChBZ,EAIT,cAACa,EAAA,EAAD,UACC,6BACGX,EAAMY,KAAI,SAAAC,GAAI,OACb,+BAEE,qBAAKC,IAAKD,EAAKE,IAAK5B,MAAM,MAAM6B,OAAO,MAAMC,IAAI,oDACjD,uBACA,cAAC,EAAD,IACA,uBACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAUC,KAAX,qBAAwBN,EAAKO,SAC7B,eAACF,EAAA,EAAUC,KAAX,0BAA6BN,EAAKQ,qBAdvC,8CCNIC,E,4JAhBb,WAEF,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAPgB7B,aCIH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93be6db1.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header = () => {\n  return (\n    <header>\n      <center>\n      <br></br>\n        <h1>Welcome To Spacestagram!</h1>\n        <h3><em>Today's selection of random photos from across the universe</em></h3>\n      </center>\n    </header>\n  );\n};\n\nexport default Header;","import React, { Component } from \"react\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeartBroken } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nclass Like extends Component {\nstate = { liked: false };\ntoggle = () => {\n\tlet localLiked = this.state.liked;\n\n\t// Toggle the state variable liked\n\tlocalLiked = !localLiked;\n\tthis.setState({ liked: localLiked });\n};\nrender() {\n\treturn (\n\t<div className=\"container\">\n\t\t<center>\n\t\t<p>Like</p>\n\t\t<div\n\t\t\tclassName=\"container\"\n\t\t\tstyle={{ border: \"1px solid black\", width: \"15%\" }}\n\t\t\tonClick={() => this.toggle()}\n\t\t>\n\t\t\t{this.state.liked === false ? (\n\t\t\t<FontAwesomeIcon icon={faHeart} />\n\t\t\t) : (\n\t\t\t<FontAwesomeIcon icon={faHeartBroken} />\n\t\t\t)}\n\t\t</div>\n\t\t</center>\n\t</div>\n\t);\n}\n}\n\nexport default Like;\n","import React, { useState, useEffect } from 'react';\nimport Like from './Like';\nimport Container from 'react-bootstrap/Container'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nfunction Images() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  const url = \"https://api.nasa.gov/planetary/apod?api_key=toByqhUym0noaMeTuDtexLfJ2bbyMsW97w9XuGwF&count=10\";\n\n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n          console.log(result)\n        },\n\n       (error) => {\n          setIsLoaded(true);\n          setError(error);\n        } \n     )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n     <Container>\n      <ul>\n        {items.map(item => (\n          <li>\n            \n            <img src={item.url} width=\"750\" height=\"750\" alt=\"Something super cool and spacey should be here!\" />\n            <br></br>\n            <Like />\n            <br></br>\n              <ListGroup>\n                <ListGroup.Item>Title: {item.title}</ListGroup.Item>\n                <ListGroup.Item>Date Taken: {item.date}</ListGroup.Item>\n                </ListGroup>  \n          </li>\n        ))}\n      </ul>\n      </Container>\n   \n    );\n  }\n}\n\nexport default Images;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Images from './components/Images';\n\n\n\nclass App extends Component {\n\n  render() {\n\nreturn (\n  <>\n  <Header />\n  <Images />\n  </>\n)\n\n\n  }\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}